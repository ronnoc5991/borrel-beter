{"version":3,"sources":["Components/Plank.js","firebase.js","Components/Store.js","Components/ItemCard.js","Components/Beers.js","Components/Cheeses.js","Components/Meats.js","Components/Snacks.js","Components/Breads.js","Components/Drawers.js","Components/CustomPlank.js","Components/CartItem.js","Components/Cart.js","Components/CartSidePanel.js","Components/Checkout.js","Components/App.js","serviceWorker.js","index.js"],"names":["Plank","props","className","id","index","plank","name","description","to","inCart","onClick","addItem","src","imageUrl","alt","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","ref","Store","useState","plankjes","setPlankjes","activePlank","setActivePlank","smallNav","useRef","title","seePlankjes","changeActivePlank","Math","round","window","scrollX","innerWidth","scroll","plankNumber","value","gsap","duration","scrollTo","y","x","parseFloat","checkCart","item","exists","i","cart","length","useEffect","plankjesArray","collection","get","then","querySnapshot","forEach","doc","push","data","tl","timeline","opacity","delay","addEventListener","removeEventListener","el","map","plankje","key","random","toString","substr","ItemCard","Beers","beers","setBeers","beersArray","where","openState","beer","Cheeses","cheeses","setCheeses","cheeseArray","cheese","Meats","meats","setMeats","meatArray","meat","Snacks","snacks","setSnacks","snackArray","snack","Breads","breads","setBreads","breadsArray","bread","Drawers","drawers","setDrawers","drawersDiv","openDrawer","drawer","currentState","newDrawers","CustomPlank","miniCart","setMiniCart","inSetUp","setInSetUp","added","setAdded","container","walkthrough","addToCart","Draggable","create","bounds","newMiniCart","filter","items","removeItemFromCart","CartItem","itemArray","price","type","min","onChange","e","changeQuantity","parseInt","target","removeItem","Cart","removeFunction","total","reduce","acc","calculateTotal","CartSidePanel","panel","right","Fragment","Checkout","htmlFor","alert","App","setCart","sideCart","setSideCart","addItemToCart","newCart","itemInArray","findIndex","shouldSideCartRender","path","exact","itemName","quantity","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c1c2baa.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Plank(props) {\n\n    return (\n        <div className=\"Plank\" id={ `plank-${props.index}`} >\n            <div className=\"plank-info\">\n                <div className=\"plank-name\">\n                    { props.plank.name }\n                </div>\n                <div className=\"plank-description\">\n                    { props.plank.description }\n                </div>\n\n                { props.plank.name === \"Make Your Own!\" ? \n                    <Link to=\"/borrel-beter/customize\">\n                        <div className=\"add-plank\"> Customize! </div>\n                    </Link>\n                    :\n                    ( props.inCart ? \n                    <div className=\"added-plank\" >\n                        In Cart\n                    </div>\n                :\n                    <div className=\"add-plank\" onClick={ () => { props.addItem(props.plank) } } >\n                        Add to Cart\n                    </div>)\n                }\n\n            </div>\n            <div className=\"plank-image\">\n                <img src={ props.plank.imageUrl } alt=\"\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Plank\n","import * as firebase from \"firebase/app\";\n\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const db = app.firestore(); //database\nexport const st = app.storage().ref();  //storage\n\nexport default app;\n\n// st.child('RectanglePlank.svg').getDownloadURL().then((url) => {\n//     console.log(url);\n// }) ","import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport Plank from './Plank'\nimport { db } from '../firebase' \n\nfunction Store(props) {\n\n    const [plankjes, setPlankjes] = useState(null);\n    const [activePlank, setActivePlank] = useState(null);\n\n    let smallNav = useRef(null);\n    let title = useRef(null);\n    let seePlankjes = useRef(null);\n\n    useEffect(() => {\n        let plankjesArray = [];\n        db.collection('plankjes').get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                plankjesArray.push(doc.data())\n            })\n            setPlankjes(plankjesArray);\n        })\n        // changeActivePlank();\n        const tl = gsap.timeline(); //eslint-disable-line\n        tl.to(title, {opacity: 1, duration: 1, delay: 1}); //eslint-disable-line\n        tl.to(seePlankjes, {opacity: 1, duration: .5}); //eslint-disable-line\n        tl.to(smallNav, {opacity: 1, duration: .5}); //eslint-disable-line\n    }, [])\n\n    useEffect(() => {\n        window.addEventListener('scroll', changeActivePlank)\n        return () => {\n            window.removeEventListener('scroll', changeActivePlank)\n        }\n    }, [])\n\n    function changeActivePlank() {\n        setActivePlank(Math.round((window.scrollX - window.innerWidth)/ window.innerWidth))\n    }\n    \n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n    \n    function getPXValue (value) {\n        return parseFloat(value) / 100 * window.innerWidth;\n    }\n    \n    function scroll (plankNumber) {\n        gsap.to(window, {duration: 1, scrollTo: {y: 0, x: getPXValue(plankNumber * 100 + 100)} }) //eslint-disable-line\n    }\n\n    function checkCart (item) {\n        let exists = false;  //loop through cart and find if an array with this item object already exists\n        for (let i = 0; i < props.cart.length; i++) {\n          if (props.cart[i][0].name === item.name) {\n            exists = true;\n          }\n        }\n        return exists;\n      }\n\n    return (\n        <div className=\"Store\" >\n\n            <Link to=\"/borrel-beter/cart\">\n                <div className=\"menu-button\">\n                    Cart\n                </div>\n            </Link>\n\n            <div className=\"store-title\">\n                \n                <div className=\"title\" ref={ el => { title = el } }>\n                    <div className=\"title-border\"></div>\n                    <h1>Borrel Beter</h1>\n                    <div className=\"sub-title\">\n                        Plankjes, Hapjes en meer\n                    </div>\n                </div>\n\n                <div className=\"see-plankjes-button\" onClick={ () => scroll(0) } ref={ el => { seePlankjes = el } } >\n                    See Plankjes\n                </div>\n            </div>\n\n           { plankjes && plankjes.map((plankje, index) => {\n               return <Plank index={ index } inCart={ checkCart(plankje) } key={ getUniqueKey() } plank={ plankje } addItem={ props.addItem } />\n           }) }\n\n           <div className=\"store-nav\" ref={ el => smallNav = el }>\n               { plankjes && plankjes.map((plankje, index) => {\n                   return <div className=\"nav-circle\"  id={`${ activePlank === index ? 'active' : '' }`} key={ index } onClick={ () => scroll(index) } ></div>    \n               }) }\n           </div>\n        </div>\n    )\n}\n\nexport default Store","import React from 'react'\n\nfunction ItemCard(props) {\n\n    function selectItem () {\n        props.addItem(props.item)\n    }\n\n    return (\n        <div className=\"ItemCard\" title={ props.item.description } onClick={ selectItem }>\n\n            <div className=\"item-image\" >\n                <img src={ props.item.imageUrl } alt={ props.item.description } />\n            </div>\n\n\n            <div className=\"item-name\">\n                { props.item.name }\n            </div>\n\n        </div>\n    )\n}\n\nexport default ItemCard\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Beers(props) {\n\n    const [beers, setBeers] = useState(null);\n\n    useEffect(() => {\n        let beersArray = [];\n        db.collection('items').where('category', \"==\", 'beer')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                beersArray.push(doc.data())\n            })\n            setBeers(beersArray);\n        })\n    }, [])\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Beers\" >\n\n            <div className={`drawer beer ${props.openState ? 'open' : 'closed'}`}>\n                { beers && beers.map((beer) => {\n\n                    return <ItemCard key={ getUniqueKey() } item={beer} addItem={ props.addItem } />\n                \n                }) }\n            </div>\n        </div>\n    )\n}\n\nexport default Beers\n","import React, { useState, useEffect } from 'react'\nimport { db }  from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Cheeses(props) {\n\n    const [cheeses, setCheeses] = useState(null);\n\n    useEffect(() => {\n        let cheeseArray = [];\n        db.collection('items').where('category', '==', 'cheese')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                cheeseArray.push(doc.data())\n            })\n            setCheeses(cheeseArray);\n        })\n    }, [])\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Cheeses\">\n\n            <div className={`drawer cheese ${ props.openState ? 'open' : 'closed' }`}>\n                { cheeses && cheeses.map((cheese) => {\n                    return <ItemCard key={ getUniqueKey() } item={cheese} addItem={ props.addItem }/>\n                })}              \n            </div>\n\n        </div>\n    )\n}\n\nexport default Cheeses\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Meats(props) {\n\n    const [meats, setMeats] = useState(null);\n\n    useEffect(() => {\n        let meatArray = [];\n        db.collection('items').where('category', '==', 'meat')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                meatArray.push(doc.data())\n            })\n            setMeats(meatArray)\n        })\n    }, [])\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Meats\">\n\n            <div className={`drawer meat ${ props.openState ? 'open' : 'closed' }`}>\n                { meats && meats.map((meat) => {\n                    return <ItemCard key={ getUniqueKey() } item={meat} addItem={ props.addItem }/>\n                })}              \n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Meats\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Snacks(props) {\n\n    const [snacks, setSnacks] = useState(null);\n\n    useEffect(() => {\n        let snackArray = [];\n        db.collection('items').where('category', '==', 'snack')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                snackArray.push(doc.data())\n            })\n            setSnacks(snackArray);\n        })\n    }, [])\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Snacks\">\n\n            <div className={`drawer snack ${ props.openState ? 'open' : 'closed' }`}>\n                {  snacks && snacks.map((snack) => {\n                    return <ItemCard key={ getUniqueKey() } item={snack} addItem={ props.addItem }/>\n                })}              \n            </div>\n\n        </div>\n    )\n}\n\nexport default Snacks\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Breads(props) {\n\n    const [breads, setBreads] = useState(null);\n\n    useEffect(() => {\n        let breadsArray = [];\n        db.collection('items').where('category', \"==\", 'bread')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                breadsArray.push(doc.data())\n            })\n            setBreads(breadsArray);\n        })\n    }, [])\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Breads\" >\n\n            <div className={`drawer bread ${props.openState ? 'open' : 'closed'}`}>\n                { breads && breads.map((bread) => {\n\n                    return <ItemCard key={ getUniqueKey() } item={bread} addItem={ props.addItem } />\n                \n                }) }\n            </div>\n        </div>\n    )\n}\n\nexport default Breads\n","import React, { useState, useEffect, useRef } from 'react'\nimport Beers from './Beers'\nimport Cheeses from './Cheeses'\nimport Meats from './Meats'\nimport Snacks from './Snacks'\nimport Breads from './Breads'\n\nfunction Drawers(props) {\n\n    const [drawers, setDrawers] = useState([true, false, false, false, false]);\n\n    let drawersDiv = useRef(null);\n\n    useEffect(() => {\n        const tl = gsap.timeline(); //eslint-disable-line\n        tl.to(drawersDiv, {y: '-25vh', duration: 1, delay: .5})\n    }, [])\n\n    function openDrawer (drawer, currentState) { //each child compenent has to know its own place in the draweropen state\n        let newDrawers = [false, false, false, false];\n        newDrawers[drawer] = !currentState;\n        setDrawers(newDrawers);\n    }\n\n    return (\n        <div className=\"Drawers\" ref={ el => { drawersDiv = el } }>\n            <div className=\"drawer-container\">\n                <div className=\"drawer-titles\">\n                    <div className=\"drawer-title beer\" onClick={ () => openDrawer(0, drawers[0]) }>\n                        <h4>Beers</h4>\n                    </div>\n                    <div className=\"drawer-title cheese\" onClick={ () => openDrawer(1, drawers[1]) }>\n                        <h4>Cheeses</h4>\n                    </div>\n                    <div className=\"drawer-title meat\" onClick={ () => openDrawer(2, drawers[2]) }>\n                        <h4>Meats</h4>\n                    </div>\n                    <div className=\"drawer-title snack\" onClick={ () => openDrawer(3, drawers[3]) }>\n                        <h4>Snacks</h4>\n                    </div>\n                    <div className=\"drawer-title bread\" onClick={ () => openDrawer(4, drawers[4]) }>\n                        <h4>Breads</h4>\n                    </div>\n                </div>\n                <Beers openState={ drawers[0] } addItem={ props.addItem } />\n                <Cheeses openState={drawers[1]} addItem={ props.addItem } />\n                <Meats openState={drawers[2]} addItem={ props.addItem } />\n                <Snacks openState={drawers[3]} addItem={ props.addItem } />\n                <Breads openState={drawers[4]} addItem={ props.addItem } />\n            </div>\n        </div>\n    )\n}\n\nexport default Drawers\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Drawers from './Drawers'\n\nfunction CustomPlank(props) {\n\n    const [miniCart, setMiniCart] = useState([]);\n    const [inSetUp, setInSetUp] = useState(true);\n    const [added, setAdded] = useState(false);\n\n    // [ item, positionY, positionY ]\n\n    let container = useRef(null);\n    let walkthrough = useRef(null);\n    let addToCart = useRef(null);\n\n    useEffect(() => {\n        gsap.to(walkthrough, {opacity: 1, duration: 1, delay: .5}) //eslint-disable-line\n        gsap.to(container, {opacity: 1, duration: 1, delay: .5}) //eslint-disable-line\n        gsap.to(addToCart, {y: '18vh', duration: 1.5, delay: .5}) //eslint-disable-line\n    }, [])\n\n    function addItemToMiniCart (item) {\n        setMiniCart([...miniCart, item])\n    }\n\n    function createDraggable () {\n        Draggable.create('.draggable', { //eslint-disable-line\n            bounds: container,\n        })\n    }\n\n    useEffect(() => {\n        if (miniCart.length > 0) {\n            createDraggable()\n        }\n    }, )\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    function removeItemFromCart (item) {\n        let newMiniCart = miniCart.filter((items) => {\n        return items.name !== item.name\n        })\n        setMiniCart(newMiniCart);\n    }\n\n    function endSetUp () {\n        setInSetUp(false);\n    }\n\n    function addToMainCart () {\n        if (miniCart.length) {\n            props.addItem(miniCart)\n            setAdded(true)\n        }\n    }\n\n    return (\n        <div className=\"CustomPlank\" >\n\n            <Link to=\"/borrel-beter/\">\n                <div className=\"menu-button\">\n                    Store\n                </div>\n            </Link>\n\n            <Link to=\"/borrel-beter/cart\">\n                <div className=\"menu-button second\">\n                    Cart\n                </div>\n            </Link>\n            \n            { added ? \n                <div className=\"added-plank\">\n                    Added To Cart!\n                </div>\n                :\n                <div className=\"add-plank\" onClick={ addToMainCart } ref={ el => { addToCart = el } }>\n                    Add to Cart\n                </div>\n            }\n\n\n            { inSetUp && \n                <div className=\"walkthrough-container\" ref={ el => { walkthrough = el } }>\n                    <h1>Step One:</h1>\n                    <h2>Select the items you want below</h2>\n                    <br/>\n                    <h1>Step Two:</h1>\n                    <h2>Arrange them on the plank</h2>\n                    <br/>\n                    <h1>Step Three:</h1>\n                    <h2>Add the plank to your cart</h2>\n\n                    <div className=\"ok-button\" onClick={ endSetUp } >OK!</div>\n                </div>\n            }\n\n            <div className=\"plank-container\" ref={ el => container = el }>\n                <img id=\"plank-image\" src=\"https://firebasestorage.googleapis.com/v0/b/borrelbeter.appspot.com/o/RectanglePlank.png?alt=media&token=f6f2cd77-1e30-4f31-93bd-e1a2f7adc361\" alt=\"\"/>\n\n                { miniCart && miniCart.map((item) => {\n                    return <div className=\"draggable\"  key={ getUniqueKey() }>\n                        <img src={ item.imageUrl } alt=\"\"/>\n                        <div className=\"delete-button\" onClick={ () => { removeItemFromCart(item) } } ><i className=\"fa fa-lg fa-trash\"></i></div>\n                    </div>\n                }) }\n            </div>\n\n\n            <Drawers addItem={ addItemToMiniCart } />\n\n        </div>\n    )\n}\n\nexport default CustomPlank","import React from 'react'\n\nfunction CartItem(props) {\n\n    //function that can increment or decrement the quantity of a given item\n    //here, we know the index of the item in the cart and the quantity\n\n    return (\n        <div className=\"CartItem\" >\n            <div className=\"item-name\">\n                { props.itemArray[0].name }\n            </div>\n\n            <div className=\"item-image\">\n                <img src={ props.itemArray[0].imageUrl } alt=\"\"/>\n            </div>\n\n            <div className=\"item-price\">\n                { `€ ${props.itemArray[0].price}` }\n            </div>\n\n            <div className=\"item-quantity\">\n                <input type=\"number\" min=\"1\" value={ props.itemArray[1] } onChange={ (e) => {\n                    props.changeQuantity(props.index, parseInt(e.target.value))\n                } } /> \n            </div>\n\n\n            <div className=\"remove-button\" onClick={ () => props.removeItem(props.itemArray[0].name) } >\n                <i className=\"fa fa-lg fa-trash\"></i>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport CartItem from './CartItem'\n\nfunction Cart(props) {\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, itemArray) => {\n            return acc + (itemArray[0].price * itemArray[1])\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    return (\n        <div className=\"Cart\">\n\n            <Link to=\"/borrel-beter/\">\n                <div className=\"menu-button\">\n                    Store\n                </div>\n            </Link>\n\n            <div className=\"cart-title\">\n                Your Order\n            </div>\n\n            <div className=\"cart-headers\">\n                <div className=\"item-name\">\n                    Item\n                </div>\n\n                <div className=\"item-price\">\n                    Price\n                </div>\n\n                <div className=\"item-quantity\">\n                    #\n                </div>\n            </div>\n\n            { props.cart.map((itemArray, index) => {\n                return <CartItem  key={ getUniqueKey() } itemArray={ itemArray } index={ index } removeItem={ props.removeFunction } changeQuantity={ props.changeQuantity } />\n            }) }\n\n            <div className=\"cart-total\">\n                <h3> Total: </h3>\n                <h3> { `€ ${calculateTotal()}` } </h3>\n            </div>\n\n            <Link to=\"/borrel-beter/checkout\">\n                <div className=\"checkout-button\">\n                    Checkout\n                </div>\n            </Link>\n\n        </div>\n    )\n}\n\nexport default Cart","import React, { useEffect, useRef } from 'react'\n\nfunction CartSidePanel(props) {\n\n    let panel = useRef(null);\n\n    useEffect(() => {\n        gsap.to(panel, {right: 0, duration: .3}) //eslint-disable-line\n    }, [])\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, itemArray) => {\n            return acc + (itemArray[0].price * itemArray[1])\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"CartSidePanel\" ref={ el => {panel = el} }>\n            <div className=\"subtotal\">\n                <div className=\"text\">\n                    Subtotal\n                </div>\n                <div className=\"total\">\n                {`€ ${ calculateTotal() }`}\n                </div>\n            </div>\n\n            { props.cart.map((itemArray) => {\n                return <React.Fragment key ={ getUniqueKey() }> <hr></hr> <img src={ itemArray[0].imageUrl } title={ itemArray[0].name } alt=\"\"/> </React.Fragment>\n            }) }\n        </div>\n    )\n}\n\nexport default CartSidePanel\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Checkout(props) {\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, itemArray) => {\n            return acc + (itemArray[0].price * itemArray[1])\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    return (\n        <div className=\"Checkout\">\n\n            <Link to=\"/borrel-beter/\">\n                <div className=\"menu-button\">\n                    Store\n                </div>\n            </Link>\n\n            <Link to=\"/borrel-beter/cart\">\n                <div className=\"menu-button second\">\n                    Cart\n                </div>\n            </Link>\n\n            <div className=\"cart-total\">\n                <h3> Total: </h3>\n                <h3> { `€ ${calculateTotal()}` } </h3>\n            </div>\n\n            <div className=\"checkout-form\">\n                <form>\n                    <h1>Billing Address</h1>\n                    <label htmlFor=\"full-name\">\n                        Full Name: \n                        <br/>\n                        <input type=\"text\" name=\"full-name\" id=\"full-name\"/>\n                    </label>\n                    <label htmlFor=\"email\">\n                        Email:\n                        <br/>\n                        <input type=\"email\" name=\"email\" id=\"email\"/>\n                    </label>\n                    <label htmlFor=\"address\">\n                        Address:\n                        <br/>\n                        <input type=\"text\" name=\"address\" id=\"address\"/>\n                    </label>\n                    <label htmlFor=\"city\">\n                        City\n                        <br/>\n                        <input type=\"text\" name=\"city\" id=\"city\"/>\n                    </label>\n                    <label htmlFor=\"country\">\n                        Country/State:\n                        <br/>\n                        <input type=\"text\" name=\"country\" id=\"country\"/>\n                    </label>\n                    <label htmlFor=\"postal-code\">\n                        Postal Code\n                        <br/>\n                        <input type=\"text\" name=\"postal-code\" id=\"postal-code\"/>\n                    </label>\n                </form>\n\n                <form>\n                    <h1>Payment</h1>\n                    <label htmlFor=\"name-on-card\">\n                        Name on Card: \n                        <br/>\n                        <input type=\"text\" name=\"name-on-card\" id=\"name-on-card\"/>\n                    </label>\n                    <label htmlFor=\"credit-card-number\">\n                        Credit Card Number:\n                        <br/>\n                        <input type=\"number\" name=\"credit-card-number\" id=\"credit-card-number\"/>\n                    </label>\n                    <label htmlFor=\"expiration\">\n                        Expiration:\n                        <br/>\n                        <input type=\"date\" name=\"expiration\" id=\"expiration\"/>\n                    </label>\n                    <label htmlFor=\"cvv\">\n                        CVV\n                        <br/>\n                        <input type=\"number\" name=\"cvv\" id=\"cvv\"/>\n                    </label>\n                </form>\n            </div>\n\n            <div className=\"final-checkout-button\" onClick={ () => { alert('Enjoy your plankje!') } } >\n                Pay Now!\n            </div>\n        </div>\n    )\n}\n\nexport default Checkout\n\n\n//form\n//, address, payment information,","import React, { useState, useEffect } from 'react';\nimport '../styles/styles.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Store from './Store'\nimport CustomPlank from './CustomPlank'\nimport Cart from './Cart'\nimport CartSidePanel from './CartSidePanel'\nimport Checkout from './Checkout'\n\n\nfunction App() {\n\n  const [cart, setCart] = useState([]);\n  const [sideCart, setSideCart] = useState(false);\n\n  function addItemToCart (item) {\n    let newCart = [...cart];\n    if (item.length) { //if the item is an array of items\n      let itemsArray = [...item];\n      itemsArray.forEach((itemInArray) => {\n        //find if it is already in cart\n        if (checkCart(itemInArray)) {\n          let index = cart.findIndex((itemArray) => {\n            return itemArray[0].name === itemInArray.name\n          })\n          newCart[index][1] = parseInt(newCart[index][1]) + 1; //increment the quantity of that item\n        } else {\n          newCart.push([itemInArray, 1])\n        }\n      })\n      setCart(newCart)\n    } else {\n      if (checkCart(item)) { //if item is in cart\n        let index = cart.findIndex((itemArray) => {\n          return itemArray[0].name === item.name\n        })\n        newCart[index][1] += 1; //increment the quantity of that item\n        setCart(newCart)\n      } else {\n        newCart.push([item, 1])\n        setCart(newCart);\n      }\n    }\n  }\n\n  function checkCart (item) {\n    let exists = false;  //loop through cart and find if an array with this item object already exists\n    for (let i = 0; i < cart.length; i++) {\n      if (cart[i][0].name === item.name) {\n        exists = true;\n      }\n    }\n    return exists;\n  }\n\n  function changeQuantity (index, quantity) {\n    let newCart = [...cart];\n    newCart[index][1] = quantity;\n    setCart(newCart);\n  }\n\n  function removeItemFromCart (itemName) {\n    let newCart = cart.filter((itemArray) => {\n      return itemArray[0].name !== itemName\n    })\n    setCart(newCart);\n  }\n\n  function shouldSideCartRender () {\n    if (window.innerWidth > 1100) {\n      setSideCart(true)\n    } else {\n      setSideCart(false);\n    }\n  }\n\n  useEffect(() => {\n    shouldSideCartRender();\n    window.addEventListener('resize', shouldSideCartRender) //remove this?\n    return () => {\n      window.removeEventListener('resize', shouldSideCartRender)\n    }\n  }, [])\n\n  \n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Switch>\n\n          <Route path=\"/borrel-beter/\" exact>\n            <Store addItem={ addItemToCart } cart={ cart } />\n            { (cart.length > 0 && sideCart) && <CartSidePanel cart={ cart } /> }\n          </Route>\n\n          <Route path=\"/borrel-beter/cart\" exact>\n            <Cart cart={ cart } removeFunction={ removeItemFromCart } changeQuantity={ changeQuantity } />\n          </Route>\n\n          <Route path=\"/borrel-beter/customize\" exact>\n            <CustomPlank  addItem={ addItemToCart } />\n          </Route>\n\n          <Route path=\"/borrel-beter/checkout\">\n            <Checkout cart={ cart } />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}