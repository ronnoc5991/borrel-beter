{"version":3,"sources":["video.mp4","Components/Nav.js","Components/Home.js","Components/Plank.js","firebase.js","Components/Store.js","Components/ItemCard.js","Components/Beers.js","Components/Cheeses.js","Components/Meats.js","Components/Snacks.js","Components/CustomPlank.js","Components/CartItem.js","Components/Cart.js","Components/CartSidePanel.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","useState","isOpen","setIsOpen","handleClick","className","onClick","to","Home","borrelen","useRef","is","belangrijk","container","borrel","beter","link","useEffect","tl","gsap","timeline","opacity","duration","delay","autoPlay","muted","loop","src","Video","ref","el","Plank","id","index","plank","name","description","item","addItem","imageUrl","alt","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","Store","plankjes","setPlankjes","activePlank","setActivePlank","smallNav","changeActivePlank","Math","round","window","scrollX","innerWidth","plankjesArray","collection","get","then","querySnapshot","forEach","doc","push","data","addEventListener","map","plankje","key","random","toString","substr","plankNumber","value","scrollTo","y","x","parseFloat","scroll","ItemCard","title","url","toUpperCase","slice","Beers","beers","setBeers","beersArray","where","openFunction","openState","beer","Cheeses","cheeses","setCheeses","cheeseArray","cheese","Meats","meats","setMeats","meatArray","meat","Snacks","snacks","setSnacks","snackArray","snack","CustomPlank","drawers","setDrawers","openDrawer","drawer","currentState","newDrawers","CartItem","price","removeItem","class","Cart","cart","removeFunction","total","reduce","acc","curr","calculateTotal","CartSidePanel","panel","right","App","setCart","sideCart","setSideCart","addItemToCart","newCart","shouldSideCartRender","path","exact","length","itemName","filter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59ba65d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.06ce422b.mp4\";","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nfunction Nav(props) {\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    function handleClick () {\n        setIsOpen(!isOpen);\n    }\n\n    return (\n        <div className=\"Nav\">\n\n            <div className=\"menu-button\" onClick={ handleClick }>\n                Menu\n            </div>\n\n            <div className={ `menu ${isOpen ? 'open': ''}` }>\n                <ul>\n                    <li onClick={ handleClick }>\n                        <Link to=\"/borrel-beter/store\">\n                            Plankjes\n                        </Link>\n                    </li>\n                    <li onClick={ handleClick }>\n                        <Link to=\"/borrel-beter/cart\">\n                            Cart\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Nav","import React, { useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Video from '../video.mp4'\n\nfunction Home() {\n\n    let borrelen = useRef(null);\n    let is = useRef(null);\n    let belangrijk = useRef(null);\n    let container = useRef(null);\n    let borrel = useRef(null);\n    let beter = useRef(null);\n    let link = useRef(null);\n\n\n    useEffect(() => {\n        const tl = gsap.timeline(); //eslint-disable-line\n        tl.to(borrelen, {opacity: 1, duration: .5, delay: 1});\n        tl.to(is, {opacity: 1, duration: .5});\n        tl.to(belangrijk, {opacity: 1, duration: .5});\n        tl.to(container, {opacity: 0, duration: .5, delay: .8});\n        tl.to(borrel, {opacity: 1, duration: .5});\n        tl.to(beter, {opacity: 1, duration: .5});\n        tl.to(link, {opacity: 1, duration: .5});\n    }, [])\n\n    return (\n        <div className=\"Home\">\n            <video autoPlay muted loop>\n                <source src={Video} />\n            </video>\n\n            <div className=\"container\" ref={ el => container = el }>\n                <span className=\"borrelen\" ref={ el => borrelen = el } >Borrelen</span>\n                <span className=\"is\" ref={ el => is = el }>is</span>\n                <span className=\"belangrijk\" ref={ el => belangrijk = el }>belangrijk.</span>\n            </div>\n\n            <div className=\"title\">\n                <span ref={ el => borrel = el }>Borrel</span>\n                <span className=\"beter\" ref={ el=> beter = el }>Beter</span>\n            </div>\n\n            <Link to=\"/borrel-beter/store\">\n                <div className=\"store-link\" ref={ el => link =el }>\n                    Plankjes\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Plank(props) {\n\n    function addItem (item) {\n        props.addItem([item])\n    }\n\n    return (\n        <div className=\"Plank\" id={ `plank-${props.index}` }>\n            <div className=\"plank-info\">\n                <div className=\"plank-name\">\n                    { props.plank.name }\n                </div>\n                <div className=\"plank-description\">\n                    { props.plank.description }\n                </div>\n                { props.plank.name===\"Make Your Own!\" ? \n                 <Link to=\"/borrel-beter/customize\"><div className=\"add-plank\"> Customize! </div></Link>\n                :  \n                <div className=\"add-plank\" onClick={ () => { addItem(props.plank) } } >\n                    Add to Cart\n                </div>\n                }\n\n            </div>\n            <div className=\"plank-image\">\n                <img src={ props.plank.imageUrl } alt=\"\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Plank\n","import * as firebase from \"firebase/app\";\n\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const db = app.firestore(); //database\nexport const st = app.storage().ref();  //storage\n\nexport default app;\n\n// st.child('RectanglePlank.svg').getDownloadURL().then((url) => {\n//     console.log(url);\n// }) ","import React, { useState, useEffect, useRef } from 'react'\nimport Plank from './Plank'\nimport { db } from '../firebase' \n\nfunction Store(props) {\n\n    const [plankjes, setPlankjes] = useState(null);\n    const [activePlank, setActivePlank] = useState(null);\n\n    let smallNav = useRef(null);\n\n    useEffect(() => {\n        let plankjesArray = [];\n        db.collection('plankjes').get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                plankjesArray.push(doc.data())\n            })\n            setPlankjes(plankjesArray);\n        })\n        changeActivePlank();\n        gsap.to(smallNav, {opacity: 1, duration: 1, delay: .5}); //eslint-disable-line\n    }, [])\n\n    function changeActivePlank() {\n        setActivePlank(Math.round(window.scrollX / window.innerWidth))\n    }\n\n    \n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n    \n    function getPXValue (value) {\n        return parseFloat(value) / 100 * window.innerWidth;\n    }\n    \n    function scroll (plankNumber) {\n        gsap.to(window, {duration: 1, scrollTo: {y: 0, x: getPXValue(plankNumber * 100)} }) //eslint-disable-line\n    }\n    \n    window.addEventListener('scroll', changeActivePlank)\n\n    return (\n        <div className=\"Store\" >\n           { plankjes && plankjes.map((plankje, index) => {\n               return <Plank index={ index } key={ getUniqueKey() } plank={ plankje } addItem={ props.addItem } />\n           }) }\n\n           <div className=\"store-nav\" ref={ el => smallNav = el }>\n               { plankjes && plankjes.map((plankje, index) => {\n                   return <div className=\"nav-circle\"  id={`${ activePlank === index ? 'active' : '' }`} key={ index } onClick={ () => scroll(index) } ></div>    \n               }) }\n           </div>\n        </div>\n    )\n}\n\nexport default Store","import React from 'react'\n\nfunction ItemCard(props) {\n\n    // useEffect(() => {\n    //     Draggable.create(image, { // eslint-disable-line\n    //         bounds: document.getElementById(\"Store\")\n    //     })\n    // }, []) \n\n\n    return (\n        <div className=\"ItemCard\" title={ props.item.description } >\n\n            <div className=\"item-image\" >\n                <img src={ props.item.url } alt={ props.item.description } />\n            </div>\n\n\n            <div className=\"item-name\">\n                {props.item.name[0].toUpperCase() + props.item.name.slice(1) }\n            </div>\n\n        </div>\n    )\n}\n\nexport default ItemCard\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Beers(props) {\n\n    const [beers, setBeers] = useState(null);\n\n    useEffect(() => {\n        let beersArray = [];\n        db.collection('items').where('category', \"==\", 'beer')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                beersArray.push(doc.data())\n            })\n            setBeers(beersArray);\n        })\n    }, [])\n\n    function handleClick() {\n        props.openFunction(0, props.openState);\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Beers\" >\n\n            <div className=\"drawer-title\" onClick={ handleClick }>\n                <h4>Beers</h4>\n            </div>\n\n            <div className={`drawer ${props.openState ? 'open' : 'closed'}`}>\n                { beers && beers.map((beer) => {\n\n                    return <ItemCard key={ getUniqueKey() } item={beer} />\n                \n                }) }\n            </div>\n        </div>\n    )\n}\n\nexport default Beers\n","import React, { useState, useEffect } from 'react'\nimport { db }  from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Cheeses(props) {\n\n    const [cheeses, setCheeses] = useState(null);\n\n    useEffect(() => {\n        let cheeseArray = [];\n        db.collection('items').where('category', '==', 'cheese')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                cheeseArray.push(doc.data())\n            })\n            setCheeses(cheeseArray);\n        })\n    }, [])\n\n    function handleClick () {\n        props.openFunction(1, props.openState)\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Cheeses\">\n\n            <div className=\"drawer-title\" onClick={ handleClick } >\n                <h4>Cheeses</h4>\n            </div>\n\n            <div className={`drawer ${ props.openState ? 'open' : 'closed' }`}>\n                { cheeses && cheeses.map((cheese) => {\n                    return <ItemCard key={ getUniqueKey() } item={cheese} />\n                })}              \n            </div>\n\n        </div>\n    )\n}\n\nexport default Cheeses\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Meats(props) {\n\n    const [meats, setMeats] = useState(null);\n\n    useEffect(() => {\n        let meatArray = [];\n        db.collection('items').where('category', '==', 'meat')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                meatArray.push(doc.data())\n            })\n            setMeats(meatArray)\n        })\n    }, [])\n\n    function handleClick () {\n        props.openFunction(2, props.openState)\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Meats\">\n\n            <div className=\"drawer-title\" onClick={ handleClick } >\n                <h4>Meats</h4>\n            </div>\n\n            <div className={`drawer ${ props.openState ? 'open' : 'closed' }`}>\n                { meats && meats.map((meat) => {\n                    return <ItemCard key={ getUniqueKey() } item={meat} />\n                })}              \n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Meats\n","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport ItemCard from './ItemCard'\n\nfunction Snacks(props) {\n\n    const [snacks, setSnacks] = useState(null);\n\n    useEffect(() => {\n        let snackArray = [];\n        db.collection('items').where('category', '==', 'snack')\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                snackArray.push(doc.data())\n            })\n            setSnacks(snackArray);\n        })\n    }, [])\n\n    function handleClick () {\n        props.openFunction(3, props.openState)\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Snacks\">\n\n            <div className=\"drawer-title\" onClick={ handleClick }>\n                <h4>Snacks</h4>\n            </div>\n\n            <div className={`drawer ${ props.openState ? 'open' : 'closed' }`}>\n                {  snacks && snacks.map((snack) => {\n                    return <ItemCard key={ getUniqueKey() } item={snack} />\n                })}              \n            </div>\n\n        </div>\n    )\n}\n\nexport default Snacks\n","import React, { useState } from 'react'\nimport Beers from './Beers'\nimport Cheeses from './Cheeses'\nimport Meats from './Meats'\nimport Snacks from './Snacks'\n\nfunction CustomPlank(props) {\n\n    const [drawers, setDrawers] = useState([false, false, false, false]);\n\n\n    function openDrawer (drawer, currentState) { //there is a more elegant solution...currently, each child compenent has to know its own place in the draweropen state\n        let newDrawers = [false, false, false, false];\n        newDrawers[drawer] = !currentState;\n        setDrawers(newDrawers);\n    }\n\n    return (\n        <div className=\"CustomPlank\" >\n            <div className=\"drawer-container\">\n                <Beers openFunction={ openDrawer } openState={drawers[0]} />\n                <Cheeses openFunction={ openDrawer } openState={drawers[1]} />\n                <Meats openFunction={ openDrawer } openState={drawers[2]} />\n                <Snacks openFunction={ openDrawer } openState={drawers[3]} />\n            </div>\n        </div>\n    )\n}\n\nexport default CustomPlank\n\n//user should select 2 cheeses, 2 meats, 2 snacks and 1 beer\n// then they should be prompted to add to cart","import React from 'react'\n\nfunction CartItem(props) {\n    return (\n        <div className=\"CartItem\" >\n            <div className=\"item-name\">\n                { props.item.name }\n            </div>\n\n            <div className=\"item-image\">\n                <img src={ props.item.imageUrl } alt=\"\"/>\n            </div>\n\n            <div className=\"item-price\">\n                { `€ ${props.item.price}` }\n            </div>\n\n\n            <div className=\"remove-button\" onClick={ () => props.removeItem(props.item.name) } >\n                <i class=\"fa fa-lg fa-trash\"></i>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem\n","import React from 'react'\nimport CartItem from './CartItem'\n\nfunction Cart(props) {\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, curr) => {\n            return acc + curr.price\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    return (\n        <div className=\"Cart\">\n            <div className=\"cart-title\">\n                Your Order\n            </div>\n\n            { props.cart.map((item) => {\n                return <CartItem  key={ getUniqueKey() } item={ item } removeItem={ props.removeFunction } />\n            }) }\n\n            <div className=\"cart-total\">\n                <h3> Total: </h3>\n                <h3> { `€ ${calculateTotal()}` } </h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart\n\n//cart needs to take into account multiple items of the same type\n//calculate price\n//display total\n//list out items and quantities and descriptions with images?","import React, { useEffect, useRef } from 'react'\n\nfunction CartSidePanel(props) {\n\n    let panel = useRef(null);\n\n    useEffect(() => {\n        gsap.to(panel, {right: 0, duration: .3}) //eslint-disable-line\n    }, [])\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, curr) => {\n            return acc + curr.price\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"CartSidePanel\" ref={ el => {panel = el} }>\n            <div className=\"subtotal\">\n                <div className=\"text\">\n                    Subtotal\n                </div>\n                <div className=\"total\">\n                {`€ ${ calculateTotal() }`}\n                </div>\n            </div>\n\n            { props.cart.map((item) => {\n                return <img src={ item.imageUrl } key ={ getUniqueKey() } title={ item.name } alt=\"\"/>\n            }) }\n        </div>\n    )\n}\n\nexport default CartSidePanel\n","import React, { useState, useEffect } from 'react';\nimport '../styles/styles.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Nav from './Nav'\nimport Home from './Home'\nimport Store from './Store'\nimport CustomPlank from './CustomPlank'\nimport Cart from './Cart'\nimport CartSidePanel from './CartSidePanel'\n\n\nfunction App() {\n\n  const [cart, setCart] = useState([]);\n  const [sideCart, setSideCart] = useState(false);\n\n  function addItemToCart (item) {\n    let newCart = [...cart, ...item];\n    setCart(newCart);\n  }\n\n  function removeItemFromCart (itemName) {\n    let newCart = cart.filter((item) => {\n      return item.name !== itemName\n    })\n    setCart(newCart);\n  }\n\n  function shouldSideCartRender () {\n    if (window.innerWidth > 1100) {\n      setSideCart(true)\n    } else {\n      setSideCart(false);\n    }\n  }\n\n  useEffect(() => {\n    shouldSideCartRender();\n  }, [])\n\n  window.addEventListener('resize', shouldSideCartRender)\n  \n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Switch>\n\n          <Route path=\"/borrel-beter/\" exact>\n            <Home />\n          </Route>\n\n          <Route path=\"/borrel-beter/store\" exact>\n            <Nav />\n            <Store addItem={ addItemToCart } cart={ cart } />\n            { (cart.length > 0 && sideCart) && <CartSidePanel cart={ cart } /> }\n          </Route>\n\n          <Route path=\"/borrel-beter/cart\" exact>\n            <Nav />\n            <Cart cart={ cart } removeFunction={ removeItemFromCart } />\n          </Route>\n\n          <Route path=\"/borrel-beter/customize\" exact>\n            <Nav />\n            <CustomPlank  addItem={ addItemToCart } />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}