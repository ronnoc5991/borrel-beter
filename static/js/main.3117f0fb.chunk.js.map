{"version":3,"sources":["cart.svg","video.mp4","Components/CartSidePanel.js","Components/Nav.js","Components/Home.js","Components/Plank.js","firebase.js","Components/Store.js","Components/CartItem.js","Components/Cart.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","CartSidePanel","props","panel","useRef","useEffect","gsap","to","right","duration","className","ref","el","cart","reduce","acc","curr","price","map","item","src","imageUrl","alt","Nav","CartImage","length","Home","borrelen","is","belangrijk","container","borrel","beter","link","tl","timeline","opacity","delay","autoPlay","muted","loop","Video","Plank","plank","name","description","onClick","addItem","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","Store","useState","plankjes","setPlankjes","plankjesArray","collection","get","then","querySnapshot","forEach","doc","push","data","id","plankje","CartItem","removeItem","Cart","removeFunction","App","setCart","path","exact","newCart","itemID","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3117f0fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.6df0b31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/video.06ce422b.mp4\";","import React, { useEffect, useRef } from 'react'\nimport { getAllByDisplayValue } from '@testing-library/react';\n\nfunction CartSidePanel(props) {\n\n    let panel = useRef(null);\n\n    useEffect(() => {\n        gsap.to(panel, {right: 0, duration: .3}) //eslint-disable-line\n    }, [])\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, curr) => {\n            return acc + curr.price\n        }, 0)\n        return total\n    }\n\n    return (\n        <div className=\"CartSidePanel\" ref={ el => {panel = el} }>\n            <div className=\"subtotal\">\n                <div className=\"text\">\n                    Subtotal\n                </div>\n                <div className=\"total\">\n                {`â‚¬ ${ calculateTotal() }`}\n                </div>\n            </div>\n\n            { props.cart.map((item) => {\n                return <img src={ item.imageUrl } alt=\"\"/>\n            }) }\n        </div>\n    )\n}\n\nexport default CartSidePanel\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport CartImage  from '../cart.svg'\nimport CartSidePanel from './CartSidePanel'\n\n\nfunction Nav(props) {\n\n    function formatCartText (numberOfItems) {\n        if (numberOfItems > 0) {\n            return `(${numberOfItems})`\n        } else {\n            return ''\n        }\n    }\n\n    return (\n        <div className=\"Nav\">\n            <ul>\n                <li>\n                    <Link to=\"/borrel-beter/store\">\n                        Plankjes\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/borrel-beter/cart\">\n                        <img src={ CartImage } alt=\"\"/>\n                    </Link>\n                </li>\n            </ul>\n            { (props.cart.length > 0) && <CartSidePanel cart={ props.cart } /> }\n        </div>\n    )\n}\n\nexport default Nav","import React, { useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Video from '../video.mp4'\n\nfunction Home() {\n\n    let borrelen = useRef(null);\n    let is = useRef(null);\n    let belangrijk = useRef(null);\n    let container = useRef(null);\n    let borrel = useRef(null);\n    let beter = useRef(null);\n    let link = useRef(null);\n\n\n    useEffect(() => {\n        const tl = gsap.timeline(); //eslint-disable-line\n        tl.to(borrelen, {opacity: 1, duration: .5, delay: 2});\n        tl.to(is, {opacity: 1, duration: .5});\n        tl.to(belangrijk, {opacity: 1, duration: .5});\n        tl.to(container, {opacity: 0, duration: .5, delay: 1});\n        tl.to(borrel, {opacity: 1, duration: .5});\n        tl.to(beter, {opacity: 1, duration: .5});\n        tl.to(link, {opacity: 1, duration: .5});\n    }, [])\n\n    return (\n        <div className=\"Home\">\n            <video autoPlay muted loop>\n                <source src={Video} />\n            </video>\n\n            <div className=\"container\" ref={ el => container = el }>\n                <span className=\"borrelen\" ref={ el => borrelen = el } >Borrelen</span>\n                <span className=\"is\" ref={ el => is = el }>is</span>\n                <span className=\"belangrijk\" ref={ el => belangrijk = el }>belangrijk.</span>\n            </div>\n\n            <div className=\"title\">\n                <span ref={ el => borrel = el }>Borrel</span>\n                <span className=\"beter\" ref={ el=> beter = el }>beter.</span>\n            </div>\n\n            <Link to=\"/borrel-beter/store\">\n                <div className=\"store-link\" ref={ el => link =el }>\n                    Plankjes\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction Plank(props) {\n\n    function addItem (item) {\n        props.addItem([item])\n    }\n\n    return (\n        <div className=\"Plank\">\n            <div className=\"plank-info\">\n                <div className=\"plank-name\">\n                    { props.plank.name }\n                </div>\n                <div className=\"plank-description\">\n                    { props.plank.description }\n                </div>\n                <div className=\"add-plank\" onClick={ () => { addItem(props.plank) } } >\n                    Add to Cart\n                </div>\n            </div>\n            <div className=\"plank-image\">\n                <img src={ props.plank.imageUrl } alt=\"\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Plank\n","import * as firebase from \"firebase/app\";\n\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const db = app.firestore(); //database\nexport const st = app.storage().ref();  //storage\n\nexport default app;\n\n// st.child('RectanglePlank.svg').getDownloadURL().then((url) => {\n//     console.log(url);\n// }) ","import React, { useState, useEffect } from 'react'\nimport Plank from './Plank'\nimport { db } from '../firebase' \n\nfunction Store(props) {\n\n    const [plankjes, setPlankjes] = useState(null);\n\n    useEffect(() => {\n        let plankjesArray = [];\n        db.collection('plankjes').get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                plankjesArray.push(doc.data())\n            })\n            setPlankjes(plankjesArray);\n        })\n    }, [])\n\n    return (\n        <div className=\"Store\" id=\"Store\">\n           { plankjes && plankjes.map((plankje) => {\n               return <Plank plank={ plankje } addItem={ props.addItem } />\n           }) }\n        </div>\n    )\n}\n\nexport default Store","import React from 'react'\n\nfunction CartItem(props) {\n    return (\n        <div className=\"CartItem\" >\n            <div className=\"item-name\">\n                { props.item.name }\n            </div>\n            <div className=\"item-price\">\n                { props.item.price }\n            </div>\n\n            <div className=\"remove-button\" onClick={ () => props.removeItem(props.item.id) } >\n                DELETE\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem\n","import React from 'react'\nimport CartItem from './CartItem'\n\nfunction Cart(props) {\n\n    function prepareCart() {\n        //takes cart from props and sorts nicely?\n    }\n\n    return (\n        <div className=\"Cart\">\n            <div className=\"cart-title\">\n                Your Order\n            </div>\n\n            { props.cart.map((item) => {\n                return <CartItem item={ item } removeItem={ props.removeFunction } />\n            }) }\n        </div>\n    )\n}\n\nexport default Cart\n\n//cart needs to take into account multiple items of the same type\n//calculate price\n//display total\n//list out items and quantities and descriptions with images?","import React, { useState } from 'react';\nimport '../styles/styles.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Nav from './Nav'\nimport Home from './Home'\nimport Store from './Store'\nimport Cart from './Cart'\n\nfunction App() {\n\n  const [cart, setCart] = useState([]);\n\n  function addItemToCart (item) {\n    let newCart = [...cart, ...item]; //spreads the cart and the new item/items out and sets the new cart\n    setCart(newCart);\n  }\n\n  function removeItemFromCart (itemID) { //find item in cart, then remove\n\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Switch>\n\n          <Route path=\"/borrel-beter/\" exact>\n            <Home />\n          </Route>\n\n          <Route path=\"/borrel-beter/store\" exact>\n            <Nav cart={ cart } />\n            <Store addItem={ addItemToCart } cart={ cart } />\n          </Route>\n\n          <Route path=\"/borrel-beter/cart\" exact>\n            <Nav cart={ cart } />\n            <Cart cart={ cart } removeFunction={ removeItemFromCart } />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}