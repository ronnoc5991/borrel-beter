{"version":3,"sources":["video.mp4","Components/Nav.js","Components/Home.js","Components/Plank.js","firebase.js","Components/Store.js","Components/CartItem.js","Components/Cart.js","Components/CartSidePanel.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","className","to","Home","borrelen","useRef","is","belangrijk","container","borrel","beter","link","useEffect","tl","gsap","timeline","opacity","duration","delay","autoPlay","muted","loop","src","Video","ref","el","Plank","plank","name","description","onClick","item","addItem","imageUrl","alt","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","Store","useState","plankjes","setPlankjes","plankjesArray","collection","get","then","querySnapshot","forEach","doc","push","data","id","map","plankje","key","Math","random","toString","substr","CartItem","price","removeItem","Cart","cart","removeFunction","total","reduce","acc","curr","round","calculateTotal","CartSidePanel","panel","right","title","App","setCart","sideCart","setSideCart","window","addEventListener","console","log","innerWidth","path","exact","newCart","length","itemName","filter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72ed1a68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.06ce422b.mp4\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nfunction Nav(props) {\n\n    return (\n        <div className=\"Nav\">\n            <div className=\"logo\">\n                <Link to=\"/borrel-beter/\">\n                    <h1>Borrel <span>Beter</span></h1>\n                </Link>\n            </div>\n            <ul>\n                <li>\n                    <Link to=\"/borrel-beter/store\">\n                        Plankjes\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/borrel-beter/cart\">\n                        Cart\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Nav","import React, { useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Video from '../video.mp4'\n\nfunction Home() {\n\n    let borrelen = useRef(null);\n    let is = useRef(null);\n    let belangrijk = useRef(null);\n    let container = useRef(null);\n    let borrel = useRef(null);\n    let beter = useRef(null);\n    let link = useRef(null);\n\n\n    useEffect(() => {\n        const tl = gsap.timeline(); //eslint-disable-line\n        tl.to(borrelen, {opacity: 1, duration: .5, delay: 2});\n        tl.to(is, {opacity: 1, duration: .5});\n        tl.to(belangrijk, {opacity: 1, duration: .5});\n        tl.to(container, {opacity: 0, duration: .5, delay: 1});\n        tl.to(borrel, {opacity: 1, duration: .5});\n        tl.to(beter, {opacity: 1, duration: .5});\n        tl.to(link, {opacity: 1, duration: .5});\n    }, [])\n\n    return (\n        <div className=\"Home\">\n            <video autoPlay muted loop>\n                <source src={Video} />\n            </video>\n\n            <div className=\"container\" ref={ el => container = el }>\n                <span className=\"borrelen\" ref={ el => borrelen = el } >Borrelen</span>\n                <span className=\"is\" ref={ el => is = el }>is</span>\n                <span className=\"belangrijk\" ref={ el => belangrijk = el }>belangrijk.</span>\n            </div>\n\n            <div className=\"title\">\n                <span ref={ el => borrel = el }>Borrel</span>\n                <span className=\"beter\" ref={ el=> beter = el }>Beter</span>\n            </div>\n\n            <Link to=\"/borrel-beter/store\">\n                <div className=\"store-link\" ref={ el => link =el }>\n                    Plankjes\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction Plank(props) {\n\n    function addItem (item) {\n        props.addItem([item])\n    }\n\n    return (\n        <div className=\"Plank\">\n            <div className=\"plank-info\">\n                <div className=\"plank-name\">\n                    { props.plank.name }\n                </div>\n                <div className=\"plank-description\">\n                    { props.plank.description }\n                </div>\n                <div className=\"add-plank\" onClick={ () => { addItem(props.plank) } } >\n                    Add to Cart\n                </div>\n            </div>\n            <div className=\"plank-image\">\n                <img src={ props.plank.imageUrl } alt=\"\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Plank\n","import * as firebase from \"firebase/app\";\n\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const db = app.firestore(); //database\nexport const st = app.storage().ref();  //storage\n\nexport default app;\n\n// st.child('RectanglePlank.svg').getDownloadURL().then((url) => {\n//     console.log(url);\n// }) ","import React, { useState, useEffect } from 'react'\nimport Plank from './Plank'\nimport { db } from '../firebase' \n\nfunction Store(props) {\n\n    const [plankjes, setPlankjes] = useState(null);\n\n    useEffect(() => {\n        let plankjesArray = [];\n        db.collection('plankjes').get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                plankjesArray.push(doc.data())\n            })\n            setPlankjes(plankjesArray);\n        })\n    }, [])\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"Store\" id=\"Store\">\n           { plankjes && plankjes.map((plankje) => {\n               return <Plank key={ getUniqueKey() } plank={ plankje } addItem={ props.addItem } />\n           }) }\n        </div>\n    )\n}\n\nexport default Store","import React from 'react'\n\nfunction CartItem(props) {\n    return (\n        <div className=\"CartItem\" >\n            <div className=\"item-name\">\n                { props.item.name }\n            </div>\n\n            <div className=\"item-image\">\n                <img src={ props.item.imageUrl } alt=\"\"/>\n            </div>\n\n            <div className=\"item-price\">\n                { `€ ${props.item.price}` }\n            </div>\n\n\n            <div className=\"remove-button\" onClick={ () => props.removeItem(props.item.name) } >\n                Remove from Cart\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem\n","import React from 'react'\nimport CartItem from './CartItem'\n\nfunction Cart(props) {\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, curr) => {\n            return acc + curr.price\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    return (\n        <div className=\"Cart\">\n            <div className=\"cart-title\">\n                Your Order\n            </div>\n\n            { props.cart.map((item) => {\n                return <CartItem  key={ getUniqueKey() } item={ item } removeItem={ props.removeFunction } />\n            }) }\n\n            <div className=\"cart-total\">\n                <h3> Total: </h3>\n                <h3> { `€ ${calculateTotal()}` } </h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart\n\n//cart needs to take into account multiple items of the same type\n//calculate price\n//display total\n//list out items and quantities and descriptions with images?","import React, { useEffect, useRef } from 'react'\n\nfunction CartSidePanel(props) {\n\n    let panel = useRef(null);\n\n    useEffect(() => {\n        gsap.to(panel, {right: 0, duration: .3}) //eslint-disable-line\n    }, [])\n\n    function calculateTotal () {\n        let total = props.cart.reduce((acc, curr) => {\n            return acc + curr.price\n        }, 0)\n        return Math.round(total * 100 ) / 100\n    }\n\n    function getUniqueKey () {\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    return (\n        <div className=\"CartSidePanel\" ref={ el => {panel = el} }>\n            <div className=\"subtotal\">\n                <div className=\"text\">\n                    Subtotal\n                </div>\n                <div className=\"total\">\n                {`€ ${ calculateTotal() }`}\n                </div>\n            </div>\n\n            { props.cart.map((item) => {\n                return <img src={ item.imageUrl } key ={ getUniqueKey() } title={ item.name } alt=\"\"/>\n            }) }\n        </div>\n    )\n}\n\nexport default CartSidePanel\n","import React, { useState } from 'react';\nimport '../styles/styles.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Nav from './Nav'\nimport Home from './Home'\nimport Store from './Store'\nimport Cart from './Cart'\nimport CartSidePanel from './CartSidePanel'\n\n\nfunction App() {\n\n  const [cart, setCart] = useState([]);\n  const [sideCart, setSideCart] = useState(false);\n\n  function addItemToCart (item) {\n    let newCart = [...cart, ...item];\n    setCart(newCart);\n  }\n\n  function removeItemFromCart (itemName) {\n    let newCart = cart.filter((item) => {\n      return item.name !== itemName\n    })\n    setCart(newCart);\n  }\n\n  function shouldSideCartRender () {\n    console.log(window.innerWidth)\n    if (window.innerWidth > 1100) {\n      setSideCart(true)\n    } else {\n      setSideCart(false);\n    }\n  }\n\n  window.addEventListener('resize', shouldSideCartRender)\n  \n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Switch>\n\n          <Route path=\"/borrel-beter/\" exact>\n            <Home />\n          </Route>\n\n          <Route path=\"/borrel-beter/store\" exact>\n            <Nav cart={ cart } />\n            <Store addItem={ addItemToCart } cart={ cart } />\n            { (cart.length > 0 && sideCart) && <CartSidePanel cart={ cart } /> }\n          </Route>\n\n          <Route path=\"/borrel-beter/cart\" exact>\n            <Nav cart={ cart } />\n            <Cart cart={ cart } removeFunction={ removeItemFromCart } />\n          </Route>\n\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}